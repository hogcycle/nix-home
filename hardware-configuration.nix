# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usbhid" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/0b3d05b1-650d-48d9-889f-2c2a626cb58d";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/120A-2E6D";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };
  fileSystems."/home/nate/samba/storage" = { 
  	device = "//192.168.1.140/storage";
	fsType = "cifs"; 
	options = ["credentials=/home/nate/.smb-credentials"]; 
  };
  fileSystems."/home/nate/samba/zfs" = { 
  	device = "//192.168.1.140/zfs";
	fsType = "cifs"; 
	options = ["credentials=/home/nate/.smb-credentials"]; 
  }; 
  fileSystems."/home/nate/samba/pictures" = { 
  	device = "//192.168.1.140/zfs-pictures";
	fsType = "cifs"; 
	options = ["credentials=/home/nate/.smb-credentials"]; 
  };
  fileSystems."/home/nate/samba/videos" = { 
  	device = "//192.168.1.140/zfs-videos";
	fsType = "cifs"; 
	options = ["credentials=/home/nate/.smb-credentials"]; 
  };
  swapDevices =
    [ { device = "/dev/disk/by-uuid/ab506577-21cf-46ed-ba98-27c1ccdd7d96"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp82s0u2u1u2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
